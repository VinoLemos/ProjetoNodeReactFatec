// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Para mais detalhes: https://www.prisma.io/docs/concepts/components/prisma-schema

model Produto {
  id        Int       @id @default(autoincrement())
  nome      String    @db.VarChar(100)
  preco     Decimal   @db.Decimal(12, 2) // independe do fornecedor, talvez não seja o mais correto, mas é só um exemplo
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  // Associação com Categoria - Produto é de uma única Categoria (N -> 1)
  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id])

  // Produtos tem vários fornecedotes (N - N)
  fornecedores   Fornecedor[]
  ItemNotaFiscal ItemNotaFiscal[]

  @@map("produtos")
}

model Fornecedor {
  id        Int       @id @default(autoincrement())
  nome      String    @db.VarChar(100)
  cnpj      Decimal   @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  // Fornecedor fornece vários produtos (N - N)
  produtos Produto[]

  @@map("fornecedores")
}

model Categoria {
  id   Int    @id @default(autoincrement())
  nome String @db.VarChar(50)

  // Associação com Produtos - Categoria é associada a vários Produtos
  produtos Produto[]

  @@map("categorias")
}

model Usuario {
  id    Int    @id @default(autoincrement())
  email String @unique @db.VarChar(100)
  senha String @db.VarChar(50)

  @@map("usuarios")
}

model NotaFiscal {
  id               Int      @id @default(autoincrement())
  cpfCliente       String   @db.VarChar(20)
  dataVenda        DateTime
  enderecoEntregta String   @db.VarChar(100)

  itemNotaFiscal ItemNotaFiscal[]

  @@map("notasfiscais")
}

model ItemNotaFiscal {
  id         Int          @id @default(autoincrement())
  notaFiscal NotaFiscal[]

  produtoId Int
  produto   Produto @relation(fields: [produtoId], references: [id])

  quantidade Int
  valorUnitario Decimal @db.Decimal(12,2)

  @@map("itemNotaFiscal")
}
